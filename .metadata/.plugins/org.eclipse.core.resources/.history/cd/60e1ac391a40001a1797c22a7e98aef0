package com.linkedlist.ds;

public class SinglyLinkedList {
	private ListNode head;
	
	private static class ListNode{
		private int data;
		private ListNode next;
	
	 ListNode(int data){
		this.data=data;
		this.next=null;
	}
	}
	 /* To display the elements of the SinglyLInkedList */
	 
	 public  void display(){
		 ListNode current=head;
		 
		 while(current!=null){
			 System.out.print(current.data +"--->");
			 current=current.next;
		 }
		 System.out.println("null");
	 }
	 
	 // To find the length of a SinglyLinkedList
	 
	 public int length(){
		 if(head==null){
			 return 0;
		 }
		 int count=0;
		 ListNode current=head;
		 while(current!=null){
			 count++;
			 current=current.next;
		 }
		 return count;
	 }
	 
	 public void insertAtFirst(int value){
		 
		 ListNode newNode=new ListNode(value);
		 newNode.next=head;
		 head=newNode;
		 
	 }
	 
	public static void main(String[] args) {
		SinglyLinkedList sll=new SinglyLinkedList();
		
	/*	
		sll.head= new ListNode(10);
		ListNode second=new ListNode(1);
		ListNode third=new ListNode(8);
		ListNode fourth=new ListNode(11);
		
		//Now we'll have to connect them to form a chain
		sll.head.next=second;  // 10 --->1
		second.next=third;	  // 10 --->1---->8
		third.next=fourth;	// 10---->1---->8----null      */
		
		sll.insertAtFirst(11);
		sll.insertAtFirst(8);
		sll.insertAtFirst(1);
		sll.insertAtFirst(3);
		
		sll.display();    
		System.out.println("Length of a List is: "+sll.length());
	}}

}
